<!DOCTYPE html>
<html>
    <head>
        <title><%= title %></title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel='stylesheet' href='/stylesheets/style.css' />
        <link rel="manifest" href="/manifest.json">
        <script type="module" src="/pwabuilder-sw-register.js"></script>
        <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    </head>
    <body>

        <!-- <form action="/sendNotification" method="POST" id="pushNotification">
            <input type="hidden" name="channelId" value="pCGzsj9JXF7JG6rps">
            <input type="text" name="title" id="sub">
            <button type="submit">Submit</button>
        </form> -->

        <button id="sendNotif" onclick="showNotification()">Notification</button>
        <button id="properPush" onclick="properPush()">ProperPush</button>
        <!-- <button id="pushtest" onclick="pushEvent()">Push</button> -->
        <!-- <button id="cleverpush" onclick="cleverPush()">Cleverpush</button> -->
        <!-- <button id="cleverpush" onclick="cleverPush()">Cleverpush</button> -->


        <script>

            // fetch not defined??
            function properPush() {
                        const rawResponse = await fetch('/sendNotification', {
                          method: 'POST',
                          headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                          },
                        //   body: JSON.stringify({a: 1, b: 'Textual content'})
                            body: {}
                        });
                        const content = await rawResponse.text();
                      
                        console.log('SendNotifcontent: ', content);
            }

           

        // function notifTest() {
        //     navigator.serviceWorker.ready
        //     .then(function (registration) {
        //         // Check if the user has an existing subscription
        //         return registration.pushManager.getSubscription()
        //             .then(async function (subscription) {
        //                 if (subscription) {
        //                     // console.log('pushManager: ', registration.pushManager)
        //                     // subscription.showNotification('Hello World!');
        //                     // console.log('subscription: ', subscription);
        //                     postData('./register', subscription);  
        //                     // console.log('endpoint: ', subscription.endpoint)  
        //                     return subscription;
        //                 }
        //             })
        //         })
        // }

        // async function postData(url, data) {
        // // Default options are marked with *
        //     const response = await fetch(url, {
        //         method: 'POST', // *GET, POST, PUT, DELETE, etc.
        //         mode: 'cors', // no-cors, *cors, same-origin
        //         cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
        //         credentials: 'same-origin', // include, *same-origin, omit
        //         headers: {
        //         'Content-Type': 'application/json'
        //         // 'Content-Type': 'application/x-www-form-urlencoded',
        //         },
        //         redirect: 'follow', // manual, *follow, error
        //         referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
        //         body: JSON.stringify(data) // body data type must match "Content-Type" header
        //     });
        //     return response.json(); // parses JSON response into native JavaScript objects
        // }



            // document.getElementById('sub')

            // navigator.serviceWorker.register('pwabuilder-sw.js');

            // function notif() {
            //     navigator.serviceWorker.ready
            //         .then(function (registration) {
            //             // Check if the user has an existing subscription
            //             console.log(registration)
            //             return registration.pushManager.getSubscription()
            //                 .then(async function (subscription) {
            //                     if (subscription) {
            //                         console.log('subscription exists');
            //                         subscription.showNotification('Hello World!');
            //                         return subscription;
            //                     }
            //                 })
            //             })
            // }

            // function msToHMS( ms ) {
            //     // 1- Convert to seconds:
            //     var seconds = ms / 1000;
            //     // 2- Extract hours:
            //     var hours = parseInt( seconds / 3600 ); // 3,600 seconds in 1 hour
            //     seconds = seconds % 3600; // seconds remaining after extracting hours
            //     // 3- Extract minutes:
            //     var minutes = parseInt( seconds / 60 ); // 60 seconds in 1 minute
            //     // 4- Keep only seconds not extracted to minutes:
            //     seconds = seconds % 60;
            //     return hours+":"+minutes+":"+seconds;
            // }

            function showNotification() {
                Notification.requestPermission(function(result) {
                    console.log('request permission: ', result);
                    if (result === 'granted') {
                        navigator.serviceWorker.ready
                        .then(async function(registration) {
                            console.log('registration:', registration);
                            var timeStamp = new Date()
                            // console.log(msToHMS(timeStamp.getTime()));
                            
                            await registration.showNotification('Vibration Sample', {
                                body: timeStamp,
                                icon: './images/icon512.png',
                                vibrate: [200, 100, 200, 100, 200, 100, 200],
                                tag: 'vibration-sample'
                            })
                            .then(console.log('end of function'));
                        });
                    }
                });
            }

            // function cleverPush() {
            //     const data = {
            //         channelId: 'pCGzsj9JXF7JG6rps',
            //         title: 'Test Notification'
            //     }
            //     const url = "https://api.cleverpush.com/notification/send";
            //     axios({
            //         method: 'POST',
            //         url, 
            //         data: JSON.stringify(data), 
            //         headers:{'Content-Type': 'application/json; charset=utf-8'}
            //     }) 
            //     .then((res) => {
            //         console.log(`statusCode: ${res.status}`)
            //         console.log(res)
            //     })
            //     .catch((error) => {
            //         console.error(error)
            //     })
            // };
                

                

                
            
            
            // document.getElementById('sendNotif').onclick = function() {
            //     const delay = 2;
            //     const ttl = 0;

            //     fetch('./sendNotification', {
            //         method: 'post',
            //         headers: {
            //             'Content-type': 'application/json'
            //         },
            //         body: JSON.stringify({
            //             subscription: subscription,
            //             delay: delay,
            //             ttl: ttl,
            //         }),
            //     });
            // }
        </script>
        
    </body>